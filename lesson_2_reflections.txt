What happens when you initialize a repository? Why do you need to do it?

A .git repository is created.
We need to do this because a .git repository is required to create the previous versions of files.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is what will be stored in the .git repository and not the contents from the working directory.
The value it offers is that we don't have to store everything everytime. We can just save whatever is in the staging area. 

How can you use the staging area to make sure you have one commit per logical change?

We can keep the stuff on the staging area unless we think that we have finished the logical change and then we can just commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When making a slightly diff version of the project.
Or building on the previous version.

How do the diagrams help you visualize the branch structure?

Because you can see by the direction of arrows which commits are reachable and which are not.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

It combines the edits. Makes it easier to understand!

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

The automatic part is good because whenever the edits are to be obviously merged, then we would not have to do it manually. 
However, we might be trying to merge two edits on the same component of the code in which case it will take a human to decide which version to keep.
In such cases, manual merging is necessary.
Manual merging thus mitigates the birth of bugs in the code.

